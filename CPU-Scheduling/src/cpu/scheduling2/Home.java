/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cpu.scheduling2;



import java.util.HashSet;
import java.util.Set;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author elmnshawy
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form JFrame
     */
    
    static DefaultTableModel model ;
    public Home(String cpu_Scheduling_Algorithm_Visualiser) {
        initComponents();
        model = (DefaultTableModel) table.getModel();
    }
//    public Home() {
//        initComponents();
//
//    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        excute = new javax.swing.JButton();
        add_process = new javax.swing.JButton();
        algorithme_type = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(217, 234, 253));

        jLabel1.setFont(new java.awt.Font("Lucida Fax", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CPU Scheduling Algorithm Visualizer");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name Process", "CPU-Time", "Wait Time", "Turnaround Time"
            }
        ));
        jScrollPane1.setViewportView(table);

        excute.setText("Excute");
        excute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excuteActionPerformed(evt);
            }
        });

        add_process.setText("Add process");
        add_process.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_processActionPerformed(evt);
            }
        });

        algorithme_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Algorithme type", "FCFS", "SJF", "Priority", "Round Robin" }));
        algorithme_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                algorithme_typeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(206, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(184, 184, 184))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(add_process, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88)
                .addComponent(algorithme_type, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addComponent(excute, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_process, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(algorithme_type, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(excute, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static String getSelectedValue(JComboBox<String> comboBox) {
        String selectedValue = (String) comboBox.getSelectedItem();
        System.out.println("Selected value: " + selectedValue);
        return selectedValue;
    }
    
    
    private void algorithme_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_algorithme_typeActionPerformed
        if ("Round Robin".equals(algorithme_type.getSelectedItem())) {
        String quantum = javax.swing.JOptionPane.showInputDialog(this, "Enter quantum:", "Quantum Input", javax.swing.JOptionPane.PLAIN_MESSAGE);
        
        if (quantum != null && !quantum.isEmpty()) {
            try {
                int quantumValue = Integer.parseInt(quantum);
                // Process the quantum value as needed
                javax.swing.JOptionPane.showMessageDialog(this, "Quantum set to: " + quantumValue, "Success", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } catch (NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Invalid quantum value! Please enter a valid number.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Quantum input was canceled or left empty.", "Info", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
    }
    }//GEN-LAST:event_algorithme_typeActionPerformed

    private void add_processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_processActionPerformed

        // Switch to the SearchResultsFrame
        Add_process Add_processFrame = new Add_process();
        Add_processFrame.setVisible(true);
        // Hide the current frame (optional)
//        setVisible(false);
    }//GEN-LAST:event_add_processActionPerformed

    private void excuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excuteActionPerformed
        // TODO add your handling code here:
        
        int num_rows = model.getRowCount();
        int num_process[] = new int[num_rows];        
        int cpu_time[] = new int[num_rows];

        // convert string to int
        for (int i = 0 ; i < num_rows ; i++){
            cpu_time[i] = Integer.parseInt(model.getValueAt(i, 1).toString());
        }
        
        // FCFS, SJF, Priority, Round Robin
        
        String algorithm = algorithme_type.getSelectedItem().toString() ;
        Object algorithm_solution[] = new Object[2]; 
        if(algorithm == "FCFS"){
            //num_process[] , cpu_time[]
        }
        else if (algorithm  == "SJF")
        {
        }
        else if (algorithm == "Priority"){}
        
        else if (algorithm == "Round Robin"){}
        
        

        
    }//GEN-LAST:event_excuteActionPerformed

    private void filltable(int cpu_time[] , int Turnaround_time[]) {
        for(int i=0 ; i<model.getRowCount() ; i++){
            model.setValueAt(cpu_time[i], i, 2);
            model.setValueAt(Turnaround_time[i], i, 3);
            
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home("CPU Scheduling Algorithm Visualiser").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_process;
    private javax.swing.JComboBox<String> algorithme_type;
    private javax.swing.JButton excute;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
